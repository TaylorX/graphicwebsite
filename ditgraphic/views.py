from chartmodule import *from handledataset import *from django.http import HttpResponsefrom django.shortcuts import redirect, render_to_response, renderfrom django.template import loader, Contextdef index(request):    return render(request,"index.html",{'title_name':'DIT Chart Generator'})def manual(request):	if request.method == "POST":		if 'analysis_data' in request.POST and request.POST['analysis_data']:			ready_to_analysis_data = request.POST['analysis_data']			mStr = ''			for line in ready_to_analysis_data:				# split_item = line.split("\n")				mStr = mStr + line				break				# for content in split_item:				# 	split_item = content.split(',')				# 	mStr = split_item				# 	mStr = mStr + split_item[0]			return render(request,"execution_time_manual.html",{'analysis_data':mStr})	else:		return render(request,"index.html",{'info':'error'})def upload_2(request):	if request.method == 'POST':		if None is request.FILES.get('file', None):			return HttpResponse("<script>alert('Failed')</script>")		file_ = request.FILES['file']		filename = str(request.FILES['file']);		handle_uploaded_file(file_, filename)		listName, listValue, column_size = read_uploaded_csv_file(filename)		mStrValue, listValue = paser_value_list(listName, listValue, column_size)		return render(request,"execution_time_2.html", {'analysis_data_1':paser_name_list(listName),'analysis_data_2':mStrValue,'listValue':listValue,'getitemName':getitemName(),'getitemColor':getitemColor(),'getitemshape':getitemshape()})	return HttpResponse("<script>alert('Failed')</script>")def upload(request):	if request.method == 'POST':		if None is request.FILES.get('file', None):			return HttpResponse("<script>alert('Failed')</script>")		file_ = request.FILES['file']		filename = str(request.FILES['file']);		handle_uploaded_file(file_, filename)		data, listMean, devicename = read_uploaded_logcat_file(filename)		itemName = getitemName()		itemName.pop(0)		return render(request,"execution_time.html", {'analysis_data':data,'analysis_data_mean':listMean,'devicename':devicename,'itemName':itemName,'getitemName':getitemName(),'getitemColor':getitemColor(),'getitemshape':getitemshape()})	return HttpResponse("<script>alert('Failed')</script>")